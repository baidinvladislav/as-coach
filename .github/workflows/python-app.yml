name: Python Application

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ vars.STAGE }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install application dependencies
      run: |
        cd backend
        curl -sSL https://install.python-poetry.org | python3 -
        poetry install --no-root

    - name: Run Pylint
      run: |
        cd backend
        poetry run pylint src --fail-under=8.5

#    TODO: Temperately disabled because of migration to async ORM brought many problems with it
#    - name: Run Mypy
#      run: |
#        cd backend
#        poetry run mypy src --explicit-package-bases

    - name: Apply migrations
      run: |
        cd backend
        poetry run alembic upgrade head
      env:
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

    - name: Run tests
      run: |
        cd backend
        poetry run pytest tests
      env:
        TEST_ENV: ${{ secrets.TEST_ENV }}
        ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
        ALGORITHM: ${{ secrets.ALGORITHM }}
        TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        JWT_REFRESH_SECRET_KEY: ${{ secrets.JWT_REFRESH_SECRET_KEY }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        REFRESH_TOKEN_EXPIRE_MINUTES: ${{ secrets.REFRESH_TOKEN_EXPIRE_MINUTES }}
        TEST_COACH_FIRST_NAME: ${{ secrets.TEST_COACH_FIRST_NAME }}
        TEST_COACH_LAST_NAME: ${{ secrets.TEST_COACH_LAST_NAME }}
        TEST_COACH_USERNAME: ${{ secrets.TEST_COACH_USERNAME }}
        TEST_COACH_PASSWORD: ${{ secrets.TEST_COACH_PASSWORD }}
        TEST_CUSTOMER_FIRST_NAME: ${{ secrets.TEST_CUSTOMER_FIRST_NAME }}
        TEST_CUSTOMER_LAST_NAME: ${{ secrets.TEST_CUSTOMER_LAST_NAME }}
        TEST_CUSTOMER_USERNAME: ${{ secrets.TEST_CUSTOMER_USERNAME }}
