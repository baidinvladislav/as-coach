name: Python Application

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ vars.STAGE }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: as_coach_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install application dependencies
      run: |
        cd backend
        curl -sSL https://install.python-poetry.org | python3 -
        poetry install --no-root

    - name: Run Pylint
      run: | 
        cd backend
        poetry run pylint src --fail-under=8.5

    - name: Run Mypy
      run: |
        cd backend
        poetry run mypy src

    - name: Apply migrations
      run: |
        cd backend
        poetry run alembic upgrade head
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/as_coach_test

    - name: Run tests
      run: |
        cd backend
        poetry run pytest tests
      env:
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        ALGORITHM: "HS256"
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/as_coach_test"
        JWT_REFRESH_SECRET_KEY: "c326217ecb811596444303fcdd6c17633915e84871db1bd4555097aba62849f0"
        JWT_SECRET_KEY: "c326217ecb811596444303fcdd6c17633915e84871db1bd4555097aba62849f0"
        REFRESH_TOKEN_EXPIRE_MINUTES: 10080
        TEST_USER_USERNAME: "+79857914688"
        TEST_USER_PASSWORD: "my_test_pswd"
